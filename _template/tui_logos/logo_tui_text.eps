%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 52 44 191 51 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: ENG_Logo.alleFarben_03..eps
%%CreationDate: Fri Aug 05 15:15:16 2011
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.576
%Color profile:  Generisches Offset-Auszugsprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
52.22353 44.69074 53.61562 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
52.22013 49.91102 m
53.61024 49.91102 L
53.61024 44.68734 L
52.22013 44.68734 L
52.22013 49.91102 L
@c
F

@rax %Note: Object
54.68570 44.69074 58.17657 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
54.67720 49.91102 m
56.08431 49.91102 L
56.08431 45.72255 L
58.16948 45.72255 L
58.16948 44.68734 L
54.67720 44.68734 L
54.67720 49.91102 L
@c
F

@rax %Note: Object
58.81663 44.69074 65.24277 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
58.83279 49.91102 m
60.93439 49.91102 L
61.88882 46.77420 L
61.92085 46.64409 61.95373 46.49896 61.98576 46.35354 C
62.00249 46.19225 62.01751 46.02898 62.03424 45.85238 C
62.05124 46.04627 62.08271 46.22400 62.09943 46.38501 C
62.13175 46.54772 62.16378 46.67641 62.19609 46.80567 C
63.15024 49.91102 L
65.23625 49.91102 L
65.23625 44.68734 L
63.92580 44.68734 L
63.92580 48.19748 L
63.92580 48.35849 63.94224 48.55351 63.94224 48.73011 C
63.95868 48.89197 63.97398 49.06970 63.99043 49.28003 C
63.95868 49.11789 63.92580 48.97332 63.87732 48.82762 C
63.84557 48.68192 63.81326 48.55351 63.76479 48.42283 C
62.58444 44.68734 L
61.33918 44.68734 L
60.19087 48.37465 L
60.15883 48.48803 60.11065 48.63288 60.07861 48.77830 C
60.04545 48.94044 60.01370 49.10173 59.98195 49.28003 C
59.99783 49.03767 59.99783 48.82762 60.01370 48.63288 C
60.04545 48.42283 60.04545 48.29414 60.04545 48.16460 C
60.04545 44.68734 L
58.83279 44.68734 L
58.83279 49.91102 L
@c
F

@rax %Note: Object
66.30973 44.69074 70.02057 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
66.30293 49.91102 m
69.92561 49.91102 L
69.92561 48.92428 L
67.69361 48.92428 L
67.69361 47.89020 L
69.81222 47.89020 L
69.81222 46.88731 L
67.69361 46.88731 L
67.69361 45.70668 L
70.02198 45.70668 L
70.02198 44.68734 L
66.30293 44.68734 L
66.30293 49.91102 L
@c
F

@rax %Note: Object
70.95969 44.69074 75.74712 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
70.96025 49.91102 m
72.68995 49.91102 L
74.21074 46.77420 L
74.25893 46.67641 74.32328 46.53156 74.38847 46.33710 C
74.45282 46.14406 74.53276 45.93260 74.61468 45.65820 C
74.58265 45.91672 74.54948 46.14406 74.51717 46.35354 C
74.50101 46.57946 74.48457 46.77420 74.48457 46.95194 C
74.48457 49.91102 L
75.74627 49.91102 L
75.74627 44.68734 L
74.01572 44.68734 L
72.44759 47.95455 L
72.38296 48.08353 72.30217 48.24539 72.23783 48.42283 C
72.17235 48.58441 72.12387 48.77830 72.07540 48.98891 C
72.12387 48.68192 72.15562 48.39024 72.17235 48.13285 C
72.20551 47.89020 72.22195 47.63055 72.22195 47.43751 C
72.22195 44.68734 L
70.96025 44.68734 L
70.96025 49.91102 L
@c
F

@rax %Note: Object
76.24687 44.69074 81.88384 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
78.21978 49.91102 m
79.90129 49.91102 L
81.87506 44.68734 L
80.38743 44.68734 L
80.03169 45.80419 L
78.01058 45.80419 L
77.62167 44.68734 L
76.24658 44.68734 L
78.21978 49.91102 L
@c
79.02935 48.74627 m
78.36633 46.77420 L
79.69238 46.77420 L
79.02935 48.74627 L
@c
F

@rax %Note: Object
82.08142 44.56942 86.53890 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
82.06894 49.91102 m
83.49165 49.91102 L
83.49165 46.87087 L
83.49165 46.43320 83.53984 46.09446 83.68469 45.90057 C
83.79893 45.70668 84.00926 45.62504 84.31569 45.62504 C
84.60709 45.62504 84.81827 45.70668 84.97871 45.93260 C
85.14057 46.14406 85.20576 46.46636 85.20576 46.87087 C
85.20576 49.91102 L
86.53209 49.91102 L
86.53209 46.87087 L
86.53209 46.09446 86.35323 45.52894 85.98104 45.14117 C
85.60970 44.75339 85.04306 44.55865 84.31569 44.55865 C
83.58888 44.55865 83.02167 44.75339 82.63446 45.14117 C
82.26255 45.52894 82.06894 46.11033 82.06894 46.87087 C
82.06894 49.91102 L
@c
F

@rax %Note: Object
89.94784 44.59380 93.86164 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
89.94302 49.91102 m
90.68655 49.91102 L
90.68655 46.83883 L
90.68655 46.28835 90.78378 45.86825 90.97824 45.60917 C
91.18743 45.31833 91.49471 45.18935 91.91480 45.18935 C
92.33660 45.18935 92.64387 45.33477 92.85279 45.62504 C
93.08013 45.91672 93.17650 46.33710 93.17650 46.91934 C
93.17650 49.91102 L
93.85569 49.91102 L
93.85569 46.88731 L
93.85569 46.11033 93.71112 45.54482 93.37153 45.15732 C
93.04781 44.78542 92.54750 44.59096 91.88447 44.59096 C
91.25263 44.59096 90.76762 44.76983 90.42803 45.15732 C
90.10460 45.52894 89.94302 46.09446 89.94302 46.80567 C
89.94302 49.91102 L
@c
F

@rax %Note: Object
95.17039 44.69074 99.18822 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
95.16557 49.91102 m
96.08769 49.91102 L
98.35172 45.85238 L
98.39991 45.78803 98.41578 45.70668 98.48013 45.57713 C
98.51329 45.46460 98.56148 45.31833 98.60967 45.15732 C
98.57764 45.33477 98.56148 45.51279 98.54532 45.65820 C
98.52945 45.82035 98.51329 45.94961 98.51329 46.06214 C
98.51329 49.91102 L
99.17603 49.91102 L
99.17603 44.68734 L
98.28624 44.68734 L
95.97515 48.77830 L
95.94170 48.82762 95.90967 48.92428 95.86148 49.03767 C
95.82831 49.16665 95.78013 49.29591 95.73194 49.50680 C
95.76397 49.21597 95.79600 48.98891 95.81216 48.85994 C
95.82831 48.68192 95.82831 48.58441 95.82831 48.52035 C
95.82831 44.68734 L
95.16557 44.68734 L
95.16557 49.91102 L
@c
F

@rax %Note: Object
100.49216 44.69074 101.22293 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
100.48649 49.91102 m
101.22945 49.91102 L
101.22945 44.68734 L
100.48649 44.68734 L
100.48649 49.91102 L
@c
F

@rax %Note: Object
102.01550 44.69074 106.65128 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
102.00557 49.91102 m
102.78255 49.91102 L
104.31780 45.38324 L
105.90265 49.91102 L
106.64674 49.91102 L
104.72173 44.68734 L
103.86539 44.68734 L
102.00557 49.91102 L
@c
F

@rax %Note: Object
107.40926 44.69074 110.30343 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
107.42230 49.91102 m
110.23597 49.91102 L
110.23597 49.34466 L
108.13351 49.34466 L
108.13351 47.69518 L
110.13846 47.69518 L
110.13846 47.11294 L
108.13351 47.11294 L
108.13351 45.28658 L
110.30117 45.28658 L
110.30117 44.68734 L
107.42230 44.68734 L
107.42230 49.91102 L
@c
F

@rax %Note: Object
111.34545 44.69074 114.88706 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
111.33609 49.91102 m
112.74180 49.91102 L
113.35691 49.91102 113.79288 49.79707 114.08428 49.57200 C
114.39213 49.34466 114.53698 49.02151 114.53698 48.56854 C
114.53698 48.24539 114.44031 47.97071 114.24699 47.74365 C
114.05254 47.53417 113.76142 47.37203 113.40539 47.30740 C
113.56639 47.25921 113.68035 47.17843 113.77729 47.08148 C
113.87424 46.98425 113.98762 46.80567 114.08428 46.56359 C
114.87628 44.68734 L
114.10101 44.68734 L
113.42126 46.38501 L
113.32460 46.61178 113.21093 46.77420 113.08167 46.85443 C
112.93682 46.95194 112.74180 47.00013 112.48328 47.00013 C
112.06290 47.00013 L
112.06290 44.68734 L
111.33609 44.68734 L
111.33609 49.91102 L
@c
112.06290 49.34466 m
112.06290 47.56620 L
112.62954 47.56620 L
112.98501 47.56620 113.29257 47.66315 113.48589 47.80828 C
113.68035 47.97071 113.79288 48.19748 113.79288 48.48803 C
113.79288 48.77830 113.69679 48.98891 113.50205 49.13405 C
113.32460 49.28003 113.01732 49.34466 112.61310 49.34466 C
112.06290 49.34466 L
@c
F

@rax %Note: Object
115.57757 44.65446 118.65317 49.95241 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
118.45049 49.78063 m
118.38586 49.13405 L
118.20728 49.21597 118.04570 49.26416 117.86769 49.31263 C
117.70611 49.34466 117.52838 49.36082 117.33420 49.36082 C
117.01134 49.36082 116.76869 49.31263 116.59068 49.18337 C
116.42939 49.06970 116.33187 48.90813 116.33187 48.71424 C
116.33187 48.55351 116.39679 48.40668 116.50961 48.26211 C
116.63887 48.13285 116.89767 47.95455 117.28517 47.74365 C
117.80362 47.45225 118.15909 47.21046 118.38586 46.96724 C
118.56302 46.72545 118.64353 46.48365 118.64353 46.15965 C
118.64353 45.72255 118.48224 45.36652 118.15909 45.07569 C
117.83565 44.80186 117.41584 44.63915 116.91383 44.63915 C
116.67260 44.63915 116.42939 44.68734 116.20261 44.71965 C
115.99285 44.75339 115.76608 44.80186 115.57134 44.88208 C
115.65326 45.60917 L
115.86274 45.46460 116.08951 45.38324 116.26668 45.33477 C
116.46142 45.28658 116.67260 45.25342 116.86564 45.25342 C
117.17263 45.25342 117.41584 45.31833 117.59244 45.46460 C
117.78746 45.60917 117.86769 45.77216 117.86769 45.99808 C
117.86769 46.35354 117.51222 46.74104 116.76869 47.14498 C
116.65531 47.21046 116.55808 47.27509 116.49373 47.32328 C
116.21820 47.48570 116.00901 47.69518 115.84687 47.90608 C
115.68529 48.14929 115.60365 48.37465 115.60365 48.63288 C
115.60365 49.02151 115.76608 49.34466 116.08951 49.60375 C
116.38091 49.82910 116.80101 49.94334 117.33420 49.94334 C
117.52838 49.94334 117.72312 49.92775 117.90000 49.89515 C
118.09502 49.89515 118.27219 49.82910 118.45049 49.78063 C
@c
F

@rax %Note: Object
119.65635 44.69074 120.38343 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
119.64614 49.91102 m
120.37408 49.91102 L
120.37408 44.68734 L
119.64614 44.68734 L
119.64614 49.91102 L
@c
F

@rax %Note: Object
121.16551 44.69074 124.82561 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
121.16693 49.91102 m
124.82050 49.91102 L
124.82050 49.29591 L
123.34932 49.29591 L
123.34932 44.68734 L
122.62195 44.68734 L
122.62195 49.29591 L
121.16693 49.29591 L
121.16693 49.91102 L
@c
F

@rax %Note: Object
125.22643 44.69074 129.79984 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
125.22586 49.91102 m
126.08164 49.91102 L
127.52079 47.43751 L
129.00926 49.91102 L
129.80098 49.91102 L
127.87767 46.83883 L
127.87767 44.68734 L
127.14888 44.68734 L
127.14888 46.83883 L
125.22586 49.91102 L
@c
F

@rax %Note: Object
132.29943 44.59380 137.03613 50.01279 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
134.66863 50.00769 m
135.39657 50.00769 135.97767 49.76476 136.41477 49.28003 C
136.83515 48.79446 137.02847 48.13285 137.02847 47.30740 C
137.02847 46.46636 136.83515 45.80419 136.41477 45.31833 C
135.97767 44.83361 135.39657 44.59096 134.66863 44.59096 C
133.94041 44.59096 133.35902 44.83361 132.93751 45.31833 C
132.51742 45.80419 132.29093 46.46636 132.29093 47.30740 C
132.29093 48.13285 132.51742 48.79446 132.93751 49.28003 C
133.35902 49.76476 133.94041 50.00769 134.66863 50.00769 C
@c
134.66863 49.42517 m
134.18277 49.42517 133.79499 49.23156 133.50416 48.85994 C
133.19660 48.45487 133.05146 47.95455 133.05146 47.30740 C
133.05146 46.66054 133.19660 46.14406 133.50416 45.77216 C
133.79499 45.38324 134.18277 45.18935 134.66863 45.18935 C
135.15307 45.18935 135.54113 45.38324 135.83225 45.77216 C
136.13953 46.14406 136.28494 46.66054 136.28494 47.30740 C
136.28494 47.95455 136.13953 48.45487 135.83225 48.85994 C
135.54113 49.23156 135.15307 49.42517 134.66863 49.42517 C
@c
F

@rax %Note: Object
138.09430 44.69074 140.79543 49.91187 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
138.08013 49.91102 m
140.79713 49.91102 L
140.79713 49.32907 L
138.84038 49.32907 L
138.84038 47.66315 L
140.71578 47.66315 L
140.71578 47.08148 L
138.84038 47.08148 L
138.84038 44.68734 L
138.08013 44.68734 L
138.08013 49.91102 L
@c
F

@rax %Note: Object
143.67883 44.66976 147.33751 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
143.67458 49.89515 m
147.32957 49.89515 L
147.32957 49.28003 L
145.87398 49.28003 L
145.87398 44.68734 L
145.14576 44.68734 L
145.14576 49.28003 L
143.67458 49.28003 L
143.67458 49.89515 L
@c
F

@rax %Note: Object
148.12044 44.66976 151.01688 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
148.10542 49.89515 m
150.95027 49.89515 L
150.95027 49.31263 L
148.84866 49.31263 L
148.84866 47.66315 L
150.83745 47.66315 L
150.83745 47.08148 L
148.84866 47.08148 L
148.84866 45.26986 L
151.03162 45.26986 L
151.03162 44.68734 L
148.10542 44.68734 L
148.10542 49.89515 L
@c
F

@rax %Note: Object
151.77912 44.65332 155.80063 49.90450 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
155.80233 49.70041 m
155.76917 49.06970 L
155.55940 49.16665 155.36551 49.21597 155.17162 49.26416 C
154.97830 49.29591 154.78356 49.31263 154.58882 49.31263 C
153.95839 49.31263 153.45751 49.13405 153.10120 48.77830 C
152.72957 48.40668 152.53540 47.90608 152.53540 47.27509 C
152.53540 46.66054 152.72957 46.15965 153.10120 45.80419 C
153.45751 45.43143 153.95839 45.25342 154.58882 45.25342 C
154.79972 45.25342 154.99247 45.28658 155.18750 45.31833 C
155.38139 45.35093 155.55940 45.41584 155.75216 45.48076 C
155.76917 44.83361 L
155.59143 44.76983 155.39754 44.71965 155.18750 44.68734 C
154.99247 44.68734 154.76712 44.63915 154.54063 44.63915 C
153.68372 44.63915 153.00482 44.88208 152.51981 45.35093 C
152.01723 45.82035 151.77600 46.43320 151.77600 47.25921 C
151.77600 48.05093 152.01723 48.71424 152.51981 49.18337 C
153.03713 49.66809 153.71603 49.89515 154.55707 49.89515 C
154.78356 49.89515 155.00976 49.89515 155.21924 49.84583 C
155.41455 49.81266 155.60759 49.76476 155.80233 49.70041 C
@c
F

@rax %Note: Object
156.67767 44.66976 160.50728 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
156.69184 49.89515 m
157.40306 49.89515 L
157.40306 47.69518 L
159.79606 47.69518 L
159.79606 49.89515 L
160.49169 49.89515 L
160.49169 44.68734 L
159.79606 44.68734 L
159.79606 47.08148 L
157.40306 47.08148 L
157.40306 44.68734 L
156.69184 44.68734 L
156.69184 49.89515 L
@c
F

@rax %Note: Object
161.81433 44.66976 165.83584 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
161.79987 49.89515 m
162.72227 49.89515 L
165.00246 45.82035 L
165.03449 45.77216 165.08268 45.67436 165.11613 45.56098 C
165.16431 45.43143 165.19550 45.28658 165.26154 45.12529 C
165.22923 45.31833 165.19550 45.48076 165.17991 45.65820 C
165.16431 45.80419 165.16431 45.93260 165.16431 46.02898 C
165.16431 49.89515 L
165.82791 49.89515 L
165.82791 44.68734 L
164.93811 44.68734 L
162.62589 48.77830 L
162.59357 48.82762 162.56126 48.89197 162.51165 49.02151 C
162.48019 49.13405 162.43143 49.28003 162.38296 49.45720 C
162.41499 49.18337 162.44844 48.97332 162.46318 48.82762 C
162.48019 48.68192 162.48019 48.55351 162.48019 48.48803 C
162.48019 44.68734 L
161.79987 44.68734 L
161.79987 49.89515 L
@c
F

@rax %Note: Object
166.88580 44.56942 171.62306 49.98898 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
169.25556 49.99153 m
169.98236 49.99153 170.56431 49.74888 170.98611 49.26416 C
171.40564 48.77830 171.61483 48.11613 171.61483 47.27509 C
171.61483 46.43320 171.40564 45.77216 170.98611 45.28658 C
170.56431 44.80186 169.98236 44.55865 169.25556 44.55865 C
168.52706 44.55865 167.94595 44.80186 167.52416 45.28658 C
167.08791 45.77216 166.87899 46.43320 166.87899 47.27509 C
166.87899 48.11613 167.08791 48.77830 167.52416 49.26416 C
167.94595 49.74888 168.52706 49.99153 169.25556 49.99153 C
@c
169.25556 49.40901 m
168.77027 49.40901 168.38192 49.21597 168.07493 48.82762 C
167.78324 48.43843 167.65455 47.92195 167.65455 47.27509 C
167.65455 46.64409 167.78324 46.12762 168.07493 45.73871 C
168.38192 45.36652 168.77027 45.17348 169.25556 45.17348 C
169.74028 45.17348 170.12806 45.36652 170.43562 45.73871 C
170.71030 46.12762 170.87159 46.64409 170.87159 47.27509 C
170.87159 47.92195 170.71030 48.43843 170.43562 48.82762 C
170.12806 49.21597 169.74028 49.40901 169.25556 49.40901 C
@c
F

@rax %Note: Object
172.67981 44.66976 175.49688 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
172.68293 49.89515 m
173.41115 49.89515 L
173.41115 45.26986 L
175.49603 45.26986 L
175.49603 44.68734 L
172.68293 44.68734 L
172.68293 49.89515 L
@c
F

@rax %Note: Object
175.85887 44.56942 180.59924 49.98898 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
178.22891 49.99153 m
178.95657 49.99153 179.53880 49.74888 179.95946 49.26416 C
180.37928 48.77830 180.59017 48.11613 180.59017 47.27509 C
180.59017 46.43320 180.37928 45.77216 179.95946 45.28658 C
179.53880 44.80186 178.95657 44.55865 178.22891 44.55865 C
177.50126 44.55865 176.91874 44.80186 176.48277 45.28658 C
176.07912 45.77216 175.85206 46.43320 175.85206 47.27509 C
175.85206 48.11613 176.07912 48.77830 176.48277 49.26416 C
176.91874 49.74888 177.50126 49.99153 178.22891 49.99153 C
@c
178.22891 49.40901 m
177.74447 49.40901 177.33969 49.21597 177.06529 48.82762 C
176.75802 48.43843 176.61231 47.92195 176.61231 47.27509 C
176.61231 46.64409 176.75802 46.12762 177.06529 45.73871 C
177.33969 45.36652 177.74447 45.17348 178.22891 45.17348 C
178.71364 45.17348 179.10283 45.36652 179.39310 45.73871 C
179.68394 46.12762 179.84665 46.64409 179.84665 47.27509 C
179.84665 47.92195 179.68394 48.43843 179.39310 48.82762 C
179.10283 49.21597 178.71364 49.40901 178.22891 49.40901 C
@c
F

@rax %Note: Object
181.41449 44.64652 185.80422 49.91244 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
185.65087 49.65194 m
185.55449 49.03767 L
185.34359 49.13405 185.13326 49.21597 184.92293 49.26416 C
184.71288 49.31263 184.48668 49.32907 184.26076 49.32907 C
183.62976 49.32907 183.12803 49.16665 182.73969 48.77830 C
182.36891 48.39024 182.17531 47.90608 182.17531 47.25921 C
182.17531 46.62794 182.36891 46.14406 182.73969 45.77216 C
183.12803 45.39912 183.62976 45.22167 184.26076 45.22167 C
184.40589 45.22167 184.55216 45.23783 184.68085 45.25342 C
184.82598 45.28658 184.95609 45.31833 185.08479 45.38324 C
185.08479 46.95194 L
184.01754 46.95194 L
184.01754 47.53417 L
185.79657 47.53417 L
185.79657 44.93055 L
185.55449 44.83361 185.29512 44.75339 185.05247 44.71965 C
184.76164 44.68734 184.48668 44.63915 184.19641 44.63915 C
183.33865 44.63915 182.65946 44.88208 182.15858 45.35093 C
181.65685 45.82035 181.41506 46.46636 181.41506 47.27509 C
181.41506 48.08353 181.65685 48.73011 182.17531 49.18337 C
182.67534 49.66809 183.35480 49.91102 184.21115 49.91102 C
184.47024 49.91102 184.69672 49.89515 184.94050 49.84583 C
185.18173 49.79707 185.40879 49.74888 185.65087 49.65194 C
@c
F

@rax %Note: Object
186.34535 44.66976 190.91849 49.88863 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
186.36265 49.89515 m
187.20312 49.89515 L
188.65814 47.42022 L
190.11402 49.89515 L
190.90517 49.89515 L
188.98243 46.82268 L
188.98243 44.68734 L
188.25335 44.68734 L
188.25335 46.80567 L
186.36265 49.89515 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
